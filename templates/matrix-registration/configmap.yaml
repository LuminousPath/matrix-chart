{{- if .Values.registration.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "matrix.fullname" . }}-registration-config
  labels:
  {{ include "matrix.labels" . | nindent 4}}
data:
  config.yaml: |
    server_location: "https://{{ include "matrix.fullname" . }}-synapse:{{ .Values.synapse.service.port }}"
    server_name: {{ .Values.matrix.serverName | quote }}
    registration_shared_secret: {{ .Values.matrix.registration.sharedSecret | quote }} # see your synapse's homeserver.yaml
    admin_api_shared_secret: {{ .Values.registration.apiPassword | quote }} # to generate tokens via the web api
    base_url: '' # e.g. '/element' for https://example.tld/element/register
    {{- if .Values.riot.enabled }}
    client_redirect: https://{{ .Values.ingress.hosts.riot }}
    {{- else }}
    client_redirect: 'https://app.element.io/#/login'
    {{- end }}
    client_logo: 'static/images/element-logo.png' # use '{cwd}' for current working directory
    db: 'sqlite:////data/db.sqlite3'
    host: '0.0.0.0'
    port: 5000
    rate_limit: ["100 per day", "10 per minute"]
    allow_cors: false
    ip_logging: false
    logging:
      disable_existing_loggers: false
      version: 1
      root:
        level: DEBUG
        handlers: [console, file]
      formatters:
        brief:
          format: '%(name)s - %(levelname)s - %(message)s'
        precise:
          format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
      handlers:
        console:
          class: logging.StreamHandler
          level: INFO
          formatter: brief
          stream: ext://sys.stdout
        file:
          class: logging.handlers.RotatingFileHandler
          formatter: precise
          level: INFO
          filename: /data/m_reg.log
          maxBytes: 10485760 # 10MB
          backupCount: 3
          encoding: utf8
    # password requirements
    password:
      min_length: 8
{{- end }}
